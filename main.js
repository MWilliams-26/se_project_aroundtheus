!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var t=class{constructor(e,t,s,i,r){this._name=e.name,this._link=e.link,this._id=e._id,this.isLiked=e.isLiked,this._cardSelector=t,this._handlePreviewPicture=s,this._handleDeleteClick=i,this._handleLikeClick=r}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._cardImageEl.addEventListener("click",(()=>{this._handlePreviewPicture(this._name,this._link)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)}))}setLikeClick(e){this.isLiked=e,this._updateLikeStatus()}_updateLikeStatus(){this.isLiked?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active")}handleDeleteClick(){this._element.remove(),this._element=null}generateCard(){return this._element=this._getTemplate(),this._cardImageEl=this._element.querySelector(".card__image"),this._cardTitleEl=this._element.querySelector(".card__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._deleteButton=this._element.querySelector(".card__delete-button"),this._likeButton=this._element.querySelector(".card__like-button"),this._updateLikeStatus(),this._setEventListeners(),this._element}},s=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}};class i{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===this._popupElement||e.target.classList.contains("modal__close"))&&this.close()}))}}var o=class extends r{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._submitButton=this._popupForm.querySelector(".modal__button")}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setLoading(e){this._submitButton.textContent=e?"Saving...":"Save"}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}};const n=document.querySelector("#profile-edit-modal"),l=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-avatar-button"),c=(n.querySelector(".modal__close"),n.querySelector(".modal__form_edit"),document.querySelector("#profile-description-input")),d=document.querySelector("#profile-title-input"),u=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-add-card-modal")),_=document.querySelector("#profile-add-button"),h=(u.querySelector(".modal__close"),u.querySelector(".modal__form_add"),u.querySelector(".modal__input_type_title"),u.querySelector(".modal__input_type_url"),document.querySelector("#image-preview-modal")),m=(h.querySelector(".modal__image-preview"),h.querySelector(".modal__image-caption"),h.querySelector(".modal__close"),document.querySelector("#confirm-delete-modal").querySelector("#confirm-delete-submit"),document.querySelector("#avatar-edit-modal")),p=(document.querySelector("#card-template").content.firstElementChild,new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}loadUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}editProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.title,about:e.description})}).then(this._checkResponse)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.url})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}editProfilePicture(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}loadPageContent(){return Promise.all([this.loadUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f34fc940-6444-4c84-9643-915e876889fb","Content-Type":"application/json"}}));let E;p.getInitialCards().then((e=>{E=new i({items:e,renderer:e=>{const t=k(e);E.addItem(t)}},".cards__list"),E.renderItems()})).catch((e=>{console.error(e)}));const v=new class{constructor(e,t,s){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}setUserAvatar(e){this._avatarElement.src=e}}(".profile__title",".profile__description",".profile__avatar");p.loadUserInfo().then((e=>{v.setUserInfo(e.name,e.about),v.setUserAvatar(e.avatar)})).catch((e=>{console.error(e)}));const f=new s(e,n.querySelector(".modal__form_edit"));f.enableValidation();const S=new s(e,m.querySelector(".modal__form_avatar"));S.enableValidation();const b=new s(e,u.querySelector(".modal__form_add"));b.enableValidation();const y=new class extends r{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__image-preview"),this._caption=this._popupElement.querySelector(".modal__image-caption")}open(e,t){this._image.src=t,this._image.alt=e,this._caption.textContent=e,super.open()}}("#image-preview-modal");function L(e,t){y.open(e,t)}function k(e){return new t(e,"#card-template",L,I,U).generateCard()}y.setEventListeners();const C=new o("#profile-edit-modal",(function(e){C.setLoading(!0),p.editProfileInfo(e).then((t=>{v.setUserInfo(e.title,e.description),C.close()})).catch((e=>{console.error(e)})).finally((()=>{C.setLoading(!1)}))}));C.setEventListeners();const g=new o("#profile-add-card-modal",(function(e){g.setLoading(!0),p.addCard(e).then((e=>{const t=k(e);E.addItem(t),g.close()})).catch((e=>{console.error(e)})).finally((()=>{g.setLoading(!1)}))}));g.setEventListeners();const q=new o("#avatar-edit-modal",(function(e){q.setLoading(!0),p.editProfilePicture(e.link).then((e=>{v.setUserAvatar(e.avatar),q.close()})).catch((e=>{console.error(e)})).finally((()=>{q.setLoading(!1)}))}));q.setEventListeners(),l.addEventListener("click",(()=>{f.resetValidation();const e=v.getUserInfo();d.value=e.name,c.value=e.job,C.open()})),_.addEventListener("click",(()=>{g.open(),b.resetValidation()})),a.addEventListener("click",(()=>{q.open(),S.resetValidation()}));const B=new class extends r{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button")}setSubmitAction(e){this._handleFormSubmit=e}setLoading(){isLoading?this._submitButton.textContent="Deleting...":this._submitButton.textContent=this._submitButtonText}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit()})),super.setEventListeners()}}("#confirm-delete-modal");function I(e){B.open(),B.setSubmitAction((()=>{p.deleteCard(e._id).then((()=>{e.handleDeleteClick(),B.close()})).catch((e=>{console.error(e)}))}))}function U(e){e.isLiked?p.unlikeCard(e._id).then((t=>{e.setLikeClick(t.isLiked)})).catch((e=>{console.error(e)})):p.likeCard(e._id).then((t=>{e.setLikeClick(t.isLiked)})).catch((e=>{console.error(e)}))}B.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWNoRyxPQUFPLElBRXRCa0UsT0FBT0MsSUFDTkMsUUFBUUMsTUFBTUYsRUFBSSxHQUNsQixHQUdOLENBRUEsU0FBU3RKLEVBQWdCc0wsR0FDbEJBLEVBQUsvSyxRQVVSd0csRUFDQzZCLFdBQVcwQyxFQUFLaEwsS0FDaEJ1SCxNQUFNUixJQUNMaUUsRUFBSy9KLGFBQWE4RixFQUFJOUcsUUFBUSxJQUUvQjhJLE9BQU9DLElBQ05DLFFBQVFDLE1BQU1GLEVBQUksSUFmcEJ2QyxFQUNDNEIsU0FBUzJDLEVBQUtoTCxLQUNkdUgsTUFBTVIsSUFDTGlFLEVBQUsvSixhQUFhOEYsRUFBSTlHLFFBQVEsSUFFL0I4SSxPQUFPQyxJQUNOQyxRQUFRQyxNQUFNRixFQUFJLEdBWXhCLENBdENBNkIsRUFBYzVGLG1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9wYWdlcy9pbmRleC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuXHJcbiAge1xyXG4gICAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcclxuICB9LFxyXG5cclxuICB7XHJcbiAgICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXHJcbiAgfSxcclxuXHJcbiAge1xyXG4gICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZ1wiLFxyXG4gIH1cclxuXTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvblNldHRpbmdzID0ge1xyXG4gICAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxyXG4gICAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXHJcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fYnV0dG9uX2Rpc2FibGVkXCIsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICAgIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIlxyXG59O1xyXG4iLCJjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihjYXJkRGF0YSwgY2FyZFNlbGVjdG9yLCBoYW5kbGVQcmV2aWV3UGljdHVyZSwgaGFuZGxlRGVsZXRlQ2xpY2ssIGhhbmRsZUxpa2VDbGljaykgXHJcbiAge1xyXG4gICAgdGhpcy5fbmFtZSA9IGNhcmREYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcclxuICAgIHRoaXMuX2lkID0gY2FyZERhdGEuX2lkO1xyXG4gICAgdGhpcy5pc0xpa2VkID0gY2FyZERhdGEuaXNMaWtlZFxyXG4gICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xyXG4gICAgdGhpcy5faGFuZGxlUHJldmlld1BpY3R1cmUgPSBoYW5kbGVQcmV2aWV3UGljdHVyZTtcclxuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNsaWNrID0gaGFuZGxlRGVsZXRlQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XHJcbiAgfVxyXG4gIFxyXG4gIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZFxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50XHJcbiAgfVxyXG4gIFxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIFxyXG4gICAgdGhpcy5fY2FyZEltYWdlRWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlUHJldmlld1BpY3R1cmUodGhpcy5fbmFtZSwgdGhpcy5fbGluaylcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICB0aGlzLl9kZWxldGVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlRGVsZXRlQ2xpY2sodGhpcyk7XHJcbiAgICB9KTtcclxuXHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayh0aGlzKTtcclxuICAgIH0pO1xyXG5cclxuICB9XHJcblxyXG4gIHNldExpa2VDbGljayhpc0xpa2VkKSB7XHJcbiAgICB0aGlzLmlzTGlrZWQgPSBpc0xpa2VkO1xyXG4gICAgdGhpcy5fdXBkYXRlTGlrZVN0YXR1cygpO1xyXG4gIH0gIFxyXG5cclxuICBfdXBkYXRlTGlrZVN0YXR1cygpIHtcclxuICAgIGlmICh0aGlzLmlzTGlrZWQpIHtcclxuICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgaGFuZGxlRGVsZXRlQ2xpY2soKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG4gIFxyXG4gICAgICBcclxuICBnZW5lcmF0ZUNhcmQoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgIFxyXG4gICAgdGhpcy5fY2FyZEltYWdlRWwgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9jYXJkVGl0bGVFbCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcclxuICAgIFxyXG4gICAgdGhpcy5fY2FyZEltYWdlRWwuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsLmFsdCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl9jYXJkVGl0bGVFbC50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcbiAgICBcclxuICAgIHRoaXMuX2RlbGV0ZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnV0dG9uXCIpO1xyXG4gICAgdGhpcy5fbGlrZUJ1dHRvbiA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKTtcclxuICAgXHJcbiAgICB0aGlzLl91cGRhdGVMaWtlU3RhdHVzKCk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICBcclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH0gXHJcbiAgICBcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ2FyZDsgXHJcbiIsImNsYXNzIEZvcm1WYWxpZGF0b3Ige1xyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMsIGZvcm1FbCkge1xyXG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IG9wdGlvbnMuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gb3B0aW9ucy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcclxuICAgIHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MgPSBvcHRpb25zLmluYWN0aXZlQnV0dG9uQ2xhc3M7XHJcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBvcHRpb25zLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBvcHRpb25zLmVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9mb3JtRWwgPSBmb3JtRWw7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTsgXHJcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gaW5wdXRFbC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbCkge1xyXG4gICAgY29uc3QgZXJyb3JNZXNzYWdlRWwgPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbC5pZH0tZXJyb3JgKTsgXHJcbiAgICBpbnB1dEVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcclxuICAgIGVycm9yTWVzc2FnZUVsLnRleHRDb250ZW50ID0gXCJcIjtcclxuICAgIGVycm9yTWVzc2FnZUVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgfVxyXG4gIFxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbCkge1xyXG4gICAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKTtcclxuICAgIH0gXHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0KCkge1xyXG4gICAgcmV0dXJuICF0aGlzLl9pbnB1dEVscy5ldmVyeSgoaW5wdXRFbCkgPT4gaW5wdXRFbC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICBkaXNhYmxlQnV0dG9uKCkge1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcylcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgfVxyXG5cclxuICBfZW5hYmxlQnV0dG9uKCkge1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcclxuICB9XHJcbiAgXHJcbiAgX3RvZ2dsZUJ1dHRvblN0YXRlKCkge1xyXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCh0aGlzLl9pbnB1dEVscykpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XHJcbiAgXHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9pbnB1dEVscyA9IFsuLi50aGlzLl9mb3JtRWwucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKV07XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9mb3JtRWwucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcbiAgICAgIFxyXG4gICAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xyXG4gICAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoZSkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX2Zvcm1FbC5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTsgXHJcbiAgfVxyXG5cclxuICBcclxuICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTsgXHJcblxyXG4gIHRoaXMuX2lucHV0RWxzLmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KVxyXG4gIH0pO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEZvcm1WYWxpZGF0b3I7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgY29uc3RydWN0b3IoeyBpdGVtcywgcmVuZGVyZXIgfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcygpIHtcclxuICAgIHRoaXMuX2l0ZW1zLmZvckVhY2goKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGNhcmREYXRhKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn0iLCJcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfSBcclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7IFxyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChcclxuICAgICAgICBldnQudGFyZ2V0ID09PSB0aGlzLl9wb3B1cEVsZW1lbnQgfHwgXHJcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fY2xvc2VcIilcclxuICAgICAgKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KVxyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIilcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKTtcclxuICAgXHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xyXG4gICAgc3VwZXIuY2xvc2UoKTsgXHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcclxuICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXQpID0+IHtcclxuICAgICAgaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGlucHV0VmFsdWVzO1xyXG4gIH0gXHJcblxyXG4gIHNldExvYWRpbmcoaXNMb2FkaW5nKSB7XHJcbiAgICBpZiAoaXNMb2FkaW5nKSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi50ZXh0Q29udGVudCA9IFwiU2F2aW5nLi4uXCI7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmVcIjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgIH0pO1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEZvcm1cclxuXHJcbi8vaW5kZXguanNcclxuXHJcbi8vIGNvbnN0IG5ld0NhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3Byb2ZpbGUtYWRkLWNhcmQtbW9kYWxcIiwgKCkgPT4ge30pO1xyXG4vLyBuZXdDYXJkUG9wdXAub3BlblxyXG5cclxuXHJcbi8vIG5ld0NhcmRQb3B1cC5jbG9zZSgpIiwiLy8gSW1wb3J0IGFsbCB0aGUgY2xhc3Nlc1xyXG5pbXBvcnQgXCIuLi9wYWdlcy9pbmRleC5jc3NcIjtcclxuaW1wb3J0IHsgaW5pdGlhbENhcmRzLCB2YWxpZGF0aW9uU2V0dGluZ3MgfSBmcm9tIFwiLi4vdXRpbHMvY29uc3RhbnRzXCI7XHJcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmRcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvclwiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uXCI7XHJcbmltcG9ydCBQb3B1cCBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFwiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZVwiO1xyXG5pbXBvcnQgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvblwiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm9cIjtcclxuaW1wb3J0IEFwaSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGlcIjtcclxuXHJcblxyXG4vLyBQcm9maWxlIEVkaXRcclxuY29uc3QgcHJvZmlsZUVkaXRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LW1vZGFsXCIpO1xyXG5jb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1lZGl0LWJ1dHRvblwiKTtcclxuY29uc3QgcHJvZmlsZUF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1hdmF0YXItYnV0dG9uXCIpO1xyXG5jb25zdCBwcm9maWxlQ2xvc2VCdXR0b24gPSBwcm9maWxlRWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlXCIpO1xyXG5jb25zdCBwcm9maWxlRWRpdEZvcm0gPSBwcm9maWxlRWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1fZWRpdFwiKTtcclxuY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZGVzY3JpcHRpb24taW5wdXRcIik7XHJcbmNvbnN0IHByb2ZpbGVUaXRsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXRpdGxlLWlucHV0XCIpO1xyXG5jb25zdCBwcm9maWxlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3RpdGxlXCIpO1xyXG5jb25zdCBwcm9maWxlRGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xyXG5cclxuXHJcbi8vIEFkZCBDYXJkXHJcbmNvbnN0IHByb2ZpbGVBZGRDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtYWRkLWNhcmQtbW9kYWxcIik7XHJcbmNvbnN0IHByb2ZpbGVBZGRDYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLWFkZC1idXR0b25cIik7XHJcbmNvbnN0IHByb2ZpbGVBZGRDYXJkQ2xvc2VCdXR0b24gPSBwcm9maWxlQWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlXCIpO1xyXG5jb25zdCBhZGRDYXJkRm9ybSA9IHByb2ZpbGVBZGRDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybV9hZGRcIik7XHJcbmNvbnN0IHByb2ZpbGVBZGRDYXJkVGl0bGVJbnB1dCA9IHByb2ZpbGVBZGRDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW5wdXRfdHlwZV90aXRsZVwiKTtcclxuY29uc3QgcHJvZmlsZUFkZENhcmRVcmxJbnB1dCA9IHByb2ZpbGVBZGRDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW5wdXRfdHlwZV91cmxcIik7XHJcblxyXG4vLyBQcmV2aWV3IEltYWdlIE1vZGFsXHJcbmNvbnN0IGltYWdlUHJldmlld01vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbWFnZS1wcmV2aWV3LW1vZGFsXCIpO1xyXG5jb25zdCBtb2RhbEltYWdlRWxlbWVudCA9IGltYWdlUHJldmlld01vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLXByZXZpZXdcIik7XHJcbmNvbnN0IG1vZGFsQ2FwdGlvbiA9IGltYWdlUHJldmlld01vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLWNhcHRpb25cIik7XHJcbmNvbnN0IGltYWdlUHJldmlld0Nsb3NlQnV0dG9uID0gaW1hZ2VQcmV2aWV3TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcblxyXG4vLyBDb25maXJtIERlbGV0ZSBNb2RhbFxyXG5jb25zdCB0cmFzaEljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbmZpcm0tZGVsZXRlLW1vZGFsXCIpO1xyXG5jb25zdCB0cmFzaFN1Ym1pdEJ1dHRvbiA9IHRyYXNoSWNvbi5xdWVyeVNlbGVjdG9yKFwiI2NvbmZpcm0tZGVsZXRlLXN1Ym1pdFwiKVxyXG5cclxuLy8gQXZhdGFyIEVkaXQgTW9kYWxcclxuY29uc3QgYXZhdGFyRWRpdE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItZWRpdC1tb2RhbFwiKTtcclxuXHJcbmNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10ZW1wbGF0ZVwiKS5jb250ZW50LmZpcnN0RWxlbWVudENoaWxkO1xyXG5cclxuXHJcblxyXG5jb25zdCBhcGkgPSBuZXcgQXBpKHtcclxuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogXCJmMzRmYzk0MC02NDQ0LTRjODQtOTY0My05MTVlODc2ODg5ZmJcIixcclxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gIH1cclxufSk7IFxyXG5cclxubGV0IGNhcmRTZWN0aW9uO1xyXG5cclxuYXBpXHJcbiAgLmdldEluaXRpYWxDYXJkcygpXHJcbiAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgY2FyZFNlY3Rpb24gPSBuZXcgU2VjdGlvbih7XHJcbiAgICAgIGl0ZW1zOiByZXMsXHJcbiAgICAgIHJlbmRlcmVyOiAoY2FyZERhdGEpID0+IHtcclxuICAgICAgICBjb25zdCBjYXJkRWwgPSByZW5kZXJDYXJkKGNhcmREYXRhKTtcclxuICAgICAgICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmRFbCk7XHJcbiAgICAgIH0sXHJcbiAgICB9LCAgXHJcbiAgXCIuY2FyZHNfX2xpc3RcIlxyXG4gICk7XHJcbiAgXHJcbiAgY2FyZFNlY3Rpb24ucmVuZGVySXRlbXMoKTtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICBjb25zb2xlLmVycm9yKGVycik7IFxyXG4gIH0pO1xyXG4gIFxyXG5jb25zdCBwcm9maWxlVXNlckluZm8gPSBuZXcgVXNlckluZm8oXHJcbiAgXCIucHJvZmlsZV9fdGl0bGVcIiwgXHJcbiAgXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIiwgXHJcbiAgXCIucHJvZmlsZV9fYXZhdGFyXCJcclxuKTsgICAgICBcclxuICBcclxuYXBpXHJcbiAgLmxvYWRVc2VySW5mbygpXHJcbiAgLnRoZW4oKGluZm8pID0+IHtcclxuICAgIHByb2ZpbGVVc2VySW5mby5zZXRVc2VySW5mbyhpbmZvLm5hbWUsIGluZm8uYWJvdXQpO1xyXG4gICAgcHJvZmlsZVVzZXJJbmZvLnNldFVzZXJBdmF0YXIoaW5mby5hdmF0YXIpO1xyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICB9KTtcclxuXHJcblxyXG5cclxuXHJcbmNvbnN0IGVkaXRGb3JtRWxlbWVudCA9IHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybV9lZGl0XCIpOyAgXHJcbmNvbnN0IGVkaXRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvblNldHRpbmdzLCBlZGl0Rm9ybUVsZW1lbnQpOyAgXHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTsgIFxyXG5cclxuY29uc3QgYXZhdGFyRm9ybUVsZW1lbnQgPSBhdmF0YXJFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybV9hdmF0YXJcIik7ICBcclxuY29uc3QgYXZhdGFyRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25TZXR0aW5ncywgYXZhdGFyRm9ybUVsZW1lbnQpOyAgXHJcbmF2YXRhckZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgYWRkRm9ybUVsZW1lbnQgPSBwcm9maWxlQWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1fYWRkXCIpOyAgXHJcbmNvbnN0IGFkZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uU2V0dGluZ3MsIGFkZEZvcm1FbGVtZW50KTsgIFxyXG5hZGRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTsgIFxyXG5cclxuXHJcbmNvbnN0IHBvcHVwV2l0aEltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiI2ltYWdlLXByZXZpZXctbW9kYWxcIik7ICBcclxucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVByZXZpZXdQaWN0dXJlKG5hbWUsIGxpbmspIHtcclxuICBwb3B1cFdpdGhJbWFnZS5vcGVuKG5hbWUsIGxpbmspO1xyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gcmVuZGVyQ2FyZChjYXJkRGF0YSkge1xyXG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcclxuICAgIGNhcmREYXRhLCBcclxuICAgIFwiI2NhcmQtdGVtcGxhdGVcIixcclxuICAgIGhhbmRsZVByZXZpZXdQaWN0dXJlLFxyXG4gICAgaGFuZGxlRGVsZXRlQ2xpY2ssXHJcbiAgICBoYW5kbGVMaWtlQ2xpY2ssXHJcbiAgKTtcclxuICByZXR1cm4gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxufVxyXG5cclxuY29uc3QgcHJvZmlsZUVkaXRGb3JtUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNwcm9maWxlLWVkaXQtbW9kYWxcIiwgaGFuZGxlUHJvZmlsZUVkaXRTdWJtaXQpOyAgXHJcbnByb2ZpbGVFZGl0Rm9ybVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlRWRpdFN1Ym1pdChpbnB1dFZhbHVlcykge1xyXG4gIHByb2ZpbGVFZGl0Rm9ybVBvcHVwLnNldExvYWRpbmcodHJ1ZSk7XHJcbiAgYXBpXHJcbiAgLmVkaXRQcm9maWxlSW5mbyhpbnB1dFZhbHVlcylcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBwcm9maWxlVXNlckluZm8uc2V0VXNlckluZm8oaW5wdXRWYWx1ZXMudGl0bGUsIGlucHV0VmFsdWVzLmRlc2NyaXB0aW9uKTtcclxuICAgIHByb2ZpbGVFZGl0Rm9ybVBvcHVwLmNsb3NlKCk7XHJcbiAgfSlcclxuICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gIH0pXHJcbiAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgcHJvZmlsZUVkaXRGb3JtUG9wdXAuc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgfSk7XHJcblxyXG59O1xyXG5cclxuY29uc3QgcHJvZmlsZUFkZENhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3Byb2ZpbGUtYWRkLWNhcmQtbW9kYWxcIiwgaGFuZGxlUHJvZmlsZUFkZENhcmRTdWJtaXQpOyAgXHJcbnByb2ZpbGVBZGRDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVBZGRDYXJkU3VibWl0KGlucHV0VmFsdWVzKSB7XHJcbiAgcHJvZmlsZUFkZENhcmRQb3B1cC5zZXRMb2FkaW5nKHRydWUpO1xyXG4gIGFwaVxyXG4gICAgLmFkZENhcmQoaW5wdXRWYWx1ZXMpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGNvbnN0IGNhcmREYXRhID0gcmVuZGVyQ2FyZChyZXMpO1xyXG4gICAgICBjYXJkU2VjdGlvbi5hZGRJdGVtKGNhcmREYXRhKTtcclxuICAgICAgcHJvZmlsZUFkZENhcmRQb3B1cC5jbG9zZSgpO1xyXG4gICAgfSlcclxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcclxuICAgIH0pXHJcbiAgICAuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgIHByb2ZpbGVBZGRDYXJkUG9wdXAuc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICB9KTtcclxufTtcclxuXHJcbmNvbnN0IGF2YXRhckVkaXRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI2F2YXRhci1lZGl0LW1vZGFsXCIsIGhhbmRsZUVkaXRBdmF0YXJTdWJtaXQpO1xyXG5hdmF0YXJFZGl0UG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUVkaXRBdmF0YXJTdWJtaXQoaW5wdXRWYWx1ZXMpIHtcclxuICBhdmF0YXJFZGl0UG9wdXAuc2V0TG9hZGluZyh0cnVlKTtcclxuICBhcGlcclxuICAgIC5lZGl0UHJvZmlsZVBpY3R1cmUoaW5wdXRWYWx1ZXMubGluaylcclxuICAgIC50aGVuKChyZXMpID0+IHtcclxuICAgICAgcHJvZmlsZVVzZXJJbmZvLnNldFVzZXJBdmF0YXIocmVzLmF2YXRhcilcclxuICAgICAgYXZhdGFyRWRpdFBvcHVwLmNsb3NlKClcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICB9KVxyXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xyXG4gICAgICBhdmF0YXJFZGl0UG9wdXAuc2V0TG9hZGluZyhmYWxzZSk7XHJcbiAgICB9KVxyXG59XHJcblxyXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gIGNvbnN0IHVzZXJJbmZvID0gcHJvZmlsZVVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgcHJvZmlsZVRpdGxlSW5wdXQudmFsdWUgPSB1c2VySW5mby5uYW1lO1xyXG4gIHByb2ZpbGVEZXNjcmlwdGlvbklucHV0LnZhbHVlID0gdXNlckluZm8uam9iO1xyXG4gIHByb2ZpbGVFZGl0Rm9ybVBvcHVwLm9wZW4oKTtcclxuICBcclxufSk7XHJcblxyXG5wcm9maWxlQWRkQ2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIHByb2ZpbGVBZGRDYXJkUG9wdXAub3BlbigpO1xyXG4gIGFkZEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbn0pO1xyXG5cclxucHJvZmlsZUF2YXRhckJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gIGF2YXRhckVkaXRQb3B1cC5vcGVuKCk7XHJcbiAgYXZhdGFyRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcblxyXG5jb25zdCBjb25maXJtRGVsZXRlID0gbmV3IFBvcHVwV2l0aENvbmZpcm1hdGlvbihcIiNjb25maXJtLWRlbGV0ZS1tb2RhbFwiKTtcclxuY29uZmlybURlbGV0ZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2xpY2soY2FyZCkge1xyXG4gIGNvbmZpcm1EZWxldGUub3BlbigpO1xyXG4gIGNvbmZpcm1EZWxldGUuc2V0U3VibWl0QWN0aW9uKCgpID0+IHsgIFxyXG4gICAgYXBpXHJcbiAgICAuZGVsZXRlQ2FyZChjYXJkLl9pZClcclxuICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgY2FyZC5oYW5kbGVEZWxldGVDbGljaygpO1xyXG4gICAgICBjb25maXJtRGVsZXRlLmNsb3NlKCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgfSlcclxuICB9KTtcclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZUxpa2VDbGljayhjYXJkKSB7XHJcbiAgaWYgKCFjYXJkLmlzTGlrZWQpIHtcclxuICAgIGFwaVxyXG4gICAgLmxpa2VDYXJkKGNhcmQuX2lkKVxyXG4gICAgLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBjYXJkLnNldExpa2VDbGljayhyZXMuaXNMaWtlZCk7XHJcbiAgICB9KVxyXG4gICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgfSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGFwaVxyXG4gICAgLnVubGlrZUNhcmQoY2FyZC5faWQpXHJcbiAgICAudGhlbigocmVzKSA9PiB7XHJcbiAgICAgIGNhcmQuc2V0TGlrZUNsaWNrKHJlcy5pc0xpa2VkKTtcclxuICAgIH0pXHJcbiAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICB9KTtcclxuICB9XHJcbn0gICAgICAgICIsImltcG9ydCBDYXJkIGZyb20gXCIuL0NhcmRcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XHJcbiAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcclxuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xyXG4gICAgdGhpcy5faGVhZGVycyA9IGhlYWRlcnM7XHJcbiAgfVxyXG5cclxuICBfY2hlY2tSZXNwb25zZShyZXMpIHtcclxuICAgIGlmIChyZXMub2spIHtcclxuICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYEVycm9yOiAke3Jlcy5zdGF0dXN9YCk7XHJcbiAgfVxyXG4gIFxyXG5cclxuICBnZXRJbml0aWFsQ2FyZHMoKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCBcclxuICAgIHsgaGVhZGVyczogdGhpcy5faGVhZGVycywgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKVxyXG4gIH07XHJcblxyXG4gIGxvYWRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxyXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLH0pLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSlcclxuICB9O1xyXG5cclxuICBlZGl0UHJvZmlsZUluZm8oY2FyZERhdGEpIHtcclxuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIFxyXG4gICAge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IGNhcmREYXRhLnRpdGxlLFxyXG4gICAgICAgIGFib3V0OiBjYXJkRGF0YS5kZXNjcmlwdGlvbixcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpICBcclxuICB9O1xyXG5cclxuICBhZGRDYXJkKGlucHV0VmFsdWVzKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHNgLCBcclxuICAgIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIG5hbWU6IGlucHV0VmFsdWVzLnRpdGxlLFxyXG4gICAgICAgIGxpbms6IGlucHV0VmFsdWVzLnVybCwgXHJcbiAgICAgIH0pLFxyXG4gICAgfSkudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKVxyXG4gIH07XHJcblxyXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtjYXJkSWR9YCwgXHJcbiAgICB7XHJcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgIH0pXHJcbiAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKVxyXG4gIH07XHJcblxyXG4gIGxpa2VDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIFxyXG4gICAge1xyXG4gICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KVxyXG4gICAgLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSlcclxuICB9O1xyXG5cclxuICB1bmxpa2VDYXJkKGNhcmRJZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfS9saWtlc2AsIFxyXG4gICAge1xyXG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICB9KVxyXG4gICAgLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSlcclxuICB9O1xyXG5cclxuICBlZGl0UHJvZmlsZVBpY3R1cmUobGluaykge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIFxyXG4gICAge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIGF2YXRhcjogbGluayxcclxuICAgICAgfSksXHJcbiAgICB9KS50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpIFxyXG4gIH1cclxuXHJcbiAgbG9hZFBhZ2VDb250ZW50KCkge1xyXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKFt0aGlzLmxvYWRVc2VySW5mbygpLCB0aGlzLmdldEluaXRpYWxDYXJkcygpXSk7XHJcbiAgfVxyXG5cclxuXHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IsIGF2YXRhclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9uYW1lRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IobmFtZVNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2pvYkVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGpvYlNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2F2YXRhckVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhclNlbGVjdG9yKTtcclxuICB9XHJcbiAgXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICBjb25zdCB1c2VySW5mbyA9IHtcclxuICAgICAgbmFtZTogdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQsXHJcbiAgICAgIGpvYjogdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCxcclxuICAgIH07XHJcbiAgICByZXR1cm4gdXNlckluZm87XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyhuYW1lLCBqb2IpIHtcclxuICAgIHRoaXMuX25hbWVFbGVtZW50LnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgIHRoaXMuX2pvYkVsZW1lbnQudGV4dENvbnRlbnQgPSBqb2I7XHJcbiAgfVxyXG5cclxuICBzZXRVc2VyQXZhdGFyKGF2YXRhcikge1xyXG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudC5zcmMgPSBhdmF0YXI7XHJcbiAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSlcclxuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLXByZXZpZXdcIik7XHJcbiAgICB0aGlzLl9jYXB0aW9uID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlLWNhcHRpb25cIik7XHJcbiAgfVxyXG5cclxuXHJcbiAgb3BlbihuYW1lLCBsaW5rKSB7XHJcbiAgICB0aGlzLl9pbWFnZS5zcmMgPSBsaW5rO1xyXG4gICAgdGhpcy5faW1hZ2UuYWx0ID0gbmFtZTtcclxuICAgIHRoaXMuX2NhcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH0gXHJcbn1cclxuXHJcbiAiLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm1hdGlvbiBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcih7IHBvcHVwU2VsZWN0b3IgfSlcclxuICAgIHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtXCIpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvblwiKTtcclxuICB9XHJcblxyXG4gIHNldFN1Ym1pdEFjdGlvbihoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICB9ICBcclxuXHJcbiAgc2V0TG9hZGluZygpIHtcclxuICAgIGlmIChpc0xvYWRpbmcpIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gXCJEZWxldGluZy4uLlwiO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fc3VibWl0QnV0dG9uVGV4dDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCgpO1xyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufSJdLCJuYW1lcyI6WyJ2YWxpZGF0aW9uU2V0dGluZ3MiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImNvbnN0cnVjdG9yIiwiY2FyZERhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVQcmV2aWV3UGljdHVyZSIsImhhbmRsZURlbGV0ZUNsaWNrIiwiaGFuZGxlTGlrZUNsaWNrIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9pZCIsImlzTGlrZWQiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZVByZXZpZXdQaWN0dXJlIiwiX2hhbmRsZURlbGV0ZUNsaWNrIiwiX2hhbmRsZUxpa2VDbGljayIsIl9nZXRUZW1wbGF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbnRlbnQiLCJmaXJzdEVsZW1lbnRDaGlsZCIsImNsb25lTm9kZSIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9jYXJkSW1hZ2VFbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfZGVsZXRlQnV0dG9uIiwiX2xpa2VCdXR0b24iLCJzZXRMaWtlQ2xpY2siLCJfdXBkYXRlTGlrZVN0YXR1cyIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsIl9lbGVtZW50IiwiZ2VuZXJhdGVDYXJkIiwiX2NhcmRUaXRsZUVsIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJvcHRpb25zIiwiZm9ybUVsIiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIl9mb3JtRWwiLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsIiwiZXJyb3JNZXNzYWdlRWwiLCJpZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGFzSW52YWxpZElucHV0IiwiX2lucHV0RWxzIiwiZXZlcnkiLCJkaXNhYmxlQnV0dG9uIiwiX3N1Ym1pdEJ1dHRvbiIsImRpc2FibGVkIiwiX2VuYWJsZUJ1dHRvbiIsIl90b2dnbGVCdXR0b25TdGF0ZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZSIsImVuYWJsZVZhbGlkYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0VmFsaWRhdGlvbiIsImlucHV0RWxlbWVudCIsIlNlY3Rpb24iLCJfcmVmIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiYWRkSXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX3BvcHVwRWxlbWVudCIsIm9wZW4iLCJfaGFuZGxlRXNjQ2xvc2UiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJzZXRFdmVudExpc3RlbmVycyIsInRhcmdldCIsImNvbnRhaW5zIiwiaGFuZGxlRm9ybVN1Ym1pdCIsInN1cGVyIiwiX3BvcHVwRm9ybSIsIl9oYW5kbGVGb3JtU3VibWl0IiwiX2lucHV0TGlzdCIsInJlc2V0IiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJpbnB1dCIsInZhbHVlIiwic2V0TG9hZGluZyIsImlzTG9hZGluZyIsInByb2ZpbGVFZGl0TW9kYWwiLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVBdmF0YXJCdXR0b24iLCJwcm9maWxlRGVzY3JpcHRpb25JbnB1dCIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZUFkZENhcmRNb2RhbCIsInByb2ZpbGVBZGRDYXJkQnV0dG9uIiwiaW1hZ2VQcmV2aWV3TW9kYWwiLCJhdmF0YXJFZGl0TW9kYWwiLCJhcGkiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJfY2hlY2tSZXNwb25zZSIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJnZXRJbml0aWFsQ2FyZHMiLCJmZXRjaCIsInRoZW4iLCJsb2FkVXNlckluZm8iLCJtZXRob2QiLCJlZGl0UHJvZmlsZUluZm8iLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInRpdGxlIiwiYWJvdXQiLCJkZXNjcmlwdGlvbiIsImFkZENhcmQiLCJ1cmwiLCJkZWxldGVDYXJkIiwiY2FyZElkIiwibGlrZUNhcmQiLCJ1bmxpa2VDYXJkIiwiZWRpdFByb2ZpbGVQaWN0dXJlIiwiYXZhdGFyIiwibG9hZFBhZ2VDb250ZW50IiwiYWxsIiwiYXV0aG9yaXphdGlvbiIsImNhcmRTZWN0aW9uIiwiY2FyZEVsIiwicmVuZGVyQ2FyZCIsImNhdGNoIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwicHJvZmlsZVVzZXJJbmZvIiwibmFtZVNlbGVjdG9yIiwiam9iU2VsZWN0b3IiLCJhdmF0YXJTZWxlY3RvciIsIl9uYW1lRWxlbWVudCIsIl9qb2JFbGVtZW50IiwiX2F2YXRhckVsZW1lbnQiLCJnZXRVc2VySW5mbyIsImpvYiIsInNldFVzZXJJbmZvIiwic2V0VXNlckF2YXRhciIsImluZm8iLCJlZGl0Rm9ybVZhbGlkYXRvciIsIkZvcm1WYWxpZGF0b3IiLCJhdmF0YXJGb3JtVmFsaWRhdG9yIiwiYWRkRm9ybVZhbGlkYXRvciIsInBvcHVwV2l0aEltYWdlIiwiX2ltYWdlIiwiX2NhcHRpb24iLCJDYXJkIiwicHJvZmlsZUVkaXRGb3JtUG9wdXAiLCJQb3B1cFdpdGhGb3JtIiwiZmluYWxseSIsInByb2ZpbGVBZGRDYXJkUG9wdXAiLCJhdmF0YXJFZGl0UG9wdXAiLCJ1c2VySW5mbyIsImNvbmZpcm1EZWxldGUiLCJzZXRTdWJtaXRBY3Rpb24iLCJfc3VibWl0QnV0dG9uVGV4dCIsImNhcmQiXSwic291cmNlUm9vdCI6IiJ9