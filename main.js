!function(){"use strict";const e=[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var s=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handlePreviewPicture=s}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeButton())),this._element.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteButton())),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handlePreviewPicture({name:this._name,link:this._link})))}_handleLikeButton(){this._element.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteButton(){this._element.remove(),this._element=null}generateCard(){return this._element=this._getTemplate(),this._setEventListeners(),this._cardImageEl=this._element.querySelector(".card__image"),this._cardTitleEl=this._element.querySelector(".card__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._element}},r=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}};class n{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class i{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===this._popupElement||e.target.classList.contains("modal__close"))&&this.close()}))}}var o=class extends i{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__input")}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}};const a=document.querySelector("#profile-edit-modal"),l=document.querySelector("#profile-edit-button"),c=(a.querySelector(".modal__close"),document.forms["edit-profile-form"],document.querySelector("#profile-description-input")),d=document.querySelector("#profile-title-input"),u=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-add-card-modal")),h=document.querySelector("#profile-add-button"),_=(u.querySelector(".modal__close"),document.forms["add-card-form"],u.querySelector(".modal__input_type_title"),u.querySelector(".modal__input_type_url"),document.querySelector("#image-preview-modal")),m=(_.querySelector(".modal__image-preview"),_.querySelector(".modal__image-caption"),_.querySelector(".modal__close"),document.querySelector("#card-template").content.firstElementChild,new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}loadUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"get",headers:this._headers}).then(this._checkResponse)}editProfileInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:title,about:description})}).then(this._checkResponse)}addCard(){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:title,link:url})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/_id`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(){return fetch(`${this._baseUrl}/cards/_id/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}unlikeCard(){return fetch(`${this._baseUrl}/cards/_id`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}unlikeCard(){return fetch(`${this._baseUrl}/cards/_id`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}editProfilePicture(){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:link})}).then(this._checkResponse)}loadPageContent(){return Promise.all([this.getUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f34fc940-6444-4c84-9643-915e876889fb","Content-Type":"application/json"}}));let p;const E=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}}(".profile__title",".profile__description");m.loadPageContent().then((t=>{p=new n({items:e,renderer:e=>{const t=L(e);p.addItem(t)}},".cards__list"),p.renderItems()})).catch((e=>{console.error(e)}));const f=new o("#profile-edit-modal",(function(e){E.setUserInfo(e.title,e.description),f.close()}));f.setEventListeners();const v=document.forms["edit-profile-form"],b=new r(t,v);b.enableValidation();const S=new o("#profile-add-card-modal",(function(e){const t=L({name:e.title,link:e.url});p.addItem(t),S.close()}));S.setEventListeners();const y=document.forms["add-card-form"],g=new r(t,y);g.enableValidation();const k=new class extends i{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__image-preview"),this._caption=this._popupElement.querySelector(".modal__image-caption")}open(e,t){this._image.src=t,this._image.alt=e,this._caption.textContent=e,super.open()}}("#image-preview-modal");k.setEventListeners();const C={};function L(e){return new s(e,"#card-template",(()=>{k.open(e.name,e.link)})).generateCard()}(e=>{Array.from(document.querySelectorAll(e.formSelector)).forEach((t=>{const s=new r(e,t),n=t.getAttribute("name");C[n]=s,s.enableValidation()}))})(t),l.addEventListener("click",(()=>{b.resetValidation();const e=E.getUserInfo();d.value=e.name,c.value=e.job,f.open()})),h.addEventListener("click",(()=>{S.open(),g.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,