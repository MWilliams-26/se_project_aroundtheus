!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var t=class{constructor(e,t,s,i,r){this._name=e.name,this._link=e.link,this._id=e._id,this._isLiked=e.isLiked,this._cardSelector=t,this._handlePreviewPicture=s,this._handleDeleteClick=i,this._handleLikeClick=r}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._cardImageEl.addEventListener("click",(()=>{this._handlePreviewPicture(this._name,this._link)})),this._deleteButton=this._element.querySelector(".card__delete-button"),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)}))}_handleLikeButton(){this._element.querySelector(".card__like-button").classList.toggle(".card__like-button_active")}_updateLikeStatus(){this._isLiked?this._likeButton.classList.add(".card__like-button_active"):this._likeButton.classList.remove(".card__like-button_active")}handleDeleteClick(){this._element.remove(),this._element=null}generateCard(){return this._element=this._getTemplate(),this._cardImageEl=this._element.querySelector(".card__image"),this._cardTitleEl=this._element.querySelector(".card__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._deleteButton=this._element.querySelector(".card__delete-button"),this._likeButton=this._element.querySelector(".card__like-button"),this._setEventListeners(),this._element}},s=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}};class i{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class r{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===this._popupElement||e.target.classList.contains("modal__close"))&&this.close()}))}}var o=class extends r{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__input"),this._submitButton=this._popupForm.querySelector(".modal__button")}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setLoading(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}};const n=document.querySelector("#profile-edit-modal"),l=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-avatar-button"),c=(n.querySelector(".modal__close"),n.querySelector(".modal__form_edit"),document.querySelector("#profile-description-input")),d=document.querySelector("#profile-title-input"),_=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-add-card-modal")),u=document.querySelector("#profile-add-button"),h=(_.querySelector(".modal__close"),_.querySelector(".modal__form_add"),_.querySelector(".modal__input_type_title"),_.querySelector(".modal__input_type_url"),document.querySelector("#image-preview-modal")),m=(h.querySelector(".modal__image-preview"),h.querySelector(".modal__image-caption"),h.querySelector(".modal__close"),document.querySelector("#confirm-delete-modal").querySelector("#confirm-delete-submit"),document.querySelector("#avatar-edit-modal")),p=(document.querySelector("#card-template").content.firstElementChild,new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}loadUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}editProfileInfo(e){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.title,about:e.description})}).then(this._checkResponse)}addCard(e){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.title,link:e.url})}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}editProfilePicture(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}loadPageContent(){return Promise.all([this.loadUserInfo(),this.getInitialCards()])}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f34fc940-6444-4c84-9643-915e876889fb","Content-Type":"application/json"}}));let E;p.getInitialCards().then((e=>{E=new i({items:e,renderer:e=>{const t=L(e);E.addItem(t)}},".cards__list"),E.renderItems()})).catch((e=>{console.error(e)}));const v=new class{constructor(e,t,s){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t),this._avatarElement=document.querySelector(s)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}setUserAvatar(e){this._avatarElement.src=e}}(".profile__title",".profile__description",".profile__image"),S=new s(e,n.querySelector(".modal__form_edit"));S.enableValidation(),new s(e,m.querySelector(".modal__form_avatar")).enableValidation();const b=new s(e,_.querySelector(".modal__form_add"));b.enableValidation();const f=new class extends r{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__image-preview"),this._caption=this._popupElement.querySelector(".modal__image-caption")}open(e,t){this._image.src=t,this._image.alt=e,this._caption.textContent=e,super.open()}}("#image-preview-modal");function y(e,t){f.open(e,t)}function L(e){return new t(e,"#card-template",y,B,handleLikeClick).generateCard()}f.setEventListeners();const k=new o("#profile-edit-modal",(function(e){k.setLoading(!0),p.editProfileInfo(e).then((t=>{v.setUserInfo(e.title,e.description),k.close()})).catch((e=>{console.error(e)})).finally((()=>{k.setLoading(!1)}))}));k.setEventListeners();const C=new o("#profile-add-card-modal",(function(e){C.setLoading(!0),p.addCard(e).then((t=>{const s=L({name:e.title,link:e.url});E.addItem(s),C.close()})).catch((e=>{console.error(e)})).finally((()=>{C.setLoading(!1)}))}));C.setEventListeners();const g=new o("#avatar-edit-modal",(function(e){g.setLoading(!0),p.editProfilePicture(e.link).then((e=>{v.setUserAvatar(e.avatar),g.close()})).catch((e=>{console.error(e)})).finally((()=>{g.setLoading(!1)}))}));g.setEventListeners(),l.addEventListener("click",(()=>{S.resetValidation();const e=v.getUserInfo();d.value=e.name,c.value=e.job,k.open()})),u.addEventListener("click",(()=>{C.open(),b.resetValidation()})),a.addEventListener("click",(()=>{g.open()}));const q=new class extends r{constructor(e){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button")}setSubmitAction(e){this._handleFormSubmit=e}setLoading(){isLoading?this._submitButton.textContent="Deleting...":this._submitButton.textContent=this._submitButtonText}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{this._handleFormSubmit()})),super.setEventListeners()}}("#confirm-delete-modal");function B(e){q.open(),q.setSubmitAction((()=>{p.deleteCard(e._id).then((()=>{e.handleDeleteClick(),q.close()})).catch((e=>{console.error(e)}))}))}q.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,