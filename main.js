!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"};var t=class{constructor(e,t,s){this._name=e.name,this._link=e.link,this._cardSelector=t,this._handlePreviewPicture=s}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeButton())),this._element.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteButton())),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handlePreviewPicture({name:this._name,link:this._link})))}_handleLikeButton(){this._element.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleDeleteButton(){this._element.remove(),this._element=null}generateCard(){return this._element=this._getTemplate(),this._setEventListeners(),this._cardImageEl=this._element.querySelector(".card__image"),this._cardTitleEl=this._element.querySelector(".card__title"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._element}},s=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formEl=t}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1)}_setEventListeners(){this._inputEls=[...this._formEl.querySelectorAll(this._inputSelector)],this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formEl.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}};class n{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{(e.target===this._popupElement||e.target.classList.contains("modal__close"))&&this.close()}))}}var r=class extends n{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputList=this._popupForm.querySelectorAll(".modal__input")}close(){this._popupForm.reset(),super.close()}_getInputValues(){const e={};return this._inputList.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}};const i=document.querySelector("#profile-edit-modal"),o=document.querySelector("#profile-edit-button"),a=(i.querySelector(".modal__close"),i.querySelector(".modal__form_edit"),document.querySelector("#profile-description-input")),l=document.querySelector("#profile-title-input"),c=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-add-card-modal")),u=document.querySelector("#profile-add-button"),_=(c.querySelector(".modal__close"),c.querySelector(".modal__form_add"),c.querySelector(".modal__input_type_title"),c.querySelector(".modal__input_type_url"),document.querySelector("#image-preview-modal")),d=(_.querySelector(".modal__image-preview"),_.querySelector(".modal__image-caption"),_.querySelector(".modal__close"),document.querySelector("#card-template").content.firstElementChild,new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}getInitialCards(){return fetch("https://around-api.en.tripleten-services.com/v1",{headers:{authorization:"f34fc940-6444-4c84-9643-915e876889fb"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"f34fc940-6444-4c84-9643-915e876889fb","Content-Type":"application/json"}}),new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=f(e);d.addItem(t)}},".cards__list"));d.renderItems();const m=new r("#profile-edit-modal",(function(e){v.setUserInfo(e.title,e.description),m.close()}));m.setEventListeners();const p=new s(e,i.querySelector(".modal__form_edit"));p.enableValidation();const h=new r("#profile-add-card-modal",(function(e){const t=f({name:e.title,link:e.url});d.addItem(t),h.close()}));h.setEventListeners();const E=new s(e,c.querySelector(".modal__form_add"));E.enableValidation();const v=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}}(".profile__title",".profile__description"),S=new class extends n{constructor(e){super({popupSelector:e}),this._image=this._popupElement.querySelector(".modal__image-preview"),this._caption=this._popupElement.querySelector(".modal__image-caption")}open(e,t){this._image.src=t,this._image.alt=e,this._caption.textContent=e,super.open()}}("#image-preview-modal");function f(e){return new t(e,"#card-template",(()=>{S.open(e.name,e.link)})).generateCard()}S.setEventListeners(),o.addEventListener("click",(()=>{p.resetValidation();const e=v.getUserInfo();l.value=e.name,a.value=e.job,m.open()})),u.addEventListener("click",(()=>{h.open(),E.resetValidation()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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S0FBS21JLFlBQVl6RyxZQUFjMkcsQ0FDakMsR0g4RG1DLGtCQUFtQix5QkFFbERDLEVBQWlCLElJL0VSLGNBQTZCMUUsRUFDMUNoRSxXQUFBQSxDQUFZa0UsR0FDVlksTUFBTSxDQUFFWixrQkFDUjlELEtBQUt1SSxPQUFTdkksS0FBSytELGNBQWN0RCxjQUFjLHlCQUMvQ1QsS0FBS3dJLFNBQVd4SSxLQUFLK0QsY0FBY3RELGNBQWMsd0JBQ25ELENBR0F1RCxJQUFBQSxDQUFLOUQsRUFBTUUsR0FDVEosS0FBS3VJLE9BQU8vRyxJQUFNcEIsRUFDbEJKLEtBQUt1SSxPQUFPOUcsSUFBTXZCLEVBQ2xCRixLQUFLd0ksU0FBUzlHLFlBQWN4QixFQUM1QndFLE1BQU1WLE1BQ1IsR0prRXdDLHdCQU8xQyxTQUFTb0QsRUFBV3ZILEdBQ2xCLE9BQU8sSUFBSTRJLEVBQUs1SSxFQUFVLGtCQUFrQixLQUMxQ3lJLEVBQWV0RSxLQUFLbkUsRUFBU0ssS0FBTUwsRUFBU08sS0FBSyxJQUVsRGlCLGNBQ0gsQ0FYQWlILEVBQWVoRSxvQkEwQmZjLEVBQWtCckUsaUJBQWlCLFNBQVMsS0FDMUM0RyxFQUFrQmpFLGtCQUNsQixNQUFNZ0YsRUFBV25CLEVBQWdCYSxjQUNqQzlDLEVBQWtCSixNQUFRd0QsRUFBU3hJLEtBQ25DbUYsRUFBd0JILE1BQVF3RCxFQUFTTCxJQUN6Q2hCLEVBQXFCckQsTUFBTSxJQUk3QndCLEVBQXFCekUsaUJBQWlCLFNBQVMsS0FDN0M4RyxFQUFvQjdELE9BQ3BCK0QsRUFBaUJyRSxpQkFBaUIsRyIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpbml0aWFsQ2FyZHMgPSBbXHJcbiAge1xyXG4gICAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuXHJcbiAge1xyXG4gICAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWtlLWxvdWlzZS5qcGdcIixcclxuICB9LFxyXG5cclxuICB7XHJcbiAgICAgIG5hbWU6IFwiQmFsZCBNb3VudGFpbnNcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcblxyXG4gIHtcclxuICAgICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3Zhbm9pc2UuanBnXCIsXHJcbiAgfSxcclxuXHJcbiAge1xyXG4gICAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXHJcbiAgICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYWdvLmpwZ1wiLFxyXG4gIH1cclxuXTtcclxuXHJcblxyXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvblNldHRpbmdzID0ge1xyXG4gICAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxyXG4gICAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXHJcbiAgICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIubW9kYWxfX2J1dHRvblwiLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJtb2RhbF9fYnV0dG9uX2Rpc2FibGVkXCIsXHJcbiAgICBpbnB1dEVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICAgIGVycm9yQ2xhc3M6IFwibW9kYWxfX2Vycm9yX3Zpc2libGVcIlxyXG59O1xyXG4iLCJjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihjYXJkRGF0YSwgY2FyZFNlbGVjdG9yLCBoYW5kbGVQcmV2aWV3UGljdHVyZSkge1xyXG4gICAgdGhpcy5fbmFtZSA9IGNhcmREYXRhLm5hbWU7XHJcbiAgICB0aGlzLl9saW5rID0gY2FyZERhdGEubGluaztcclxuICAgIHRoaXMuX2NhcmRTZWxlY3RvciA9IGNhcmRTZWxlY3RvcjtcclxuICAgIHRoaXMuX2hhbmRsZVByZXZpZXdQaWN0dXJlID0gaGFuZGxlUHJldmlld1BpY3R1cmU7XHJcbiAgfVxyXG4gIFxyXG4gIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY2FyZFNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZFxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgcmV0dXJuIGNhcmRFbGVtZW50XHJcbiAgfVxyXG4gIFxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2VsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIilcclxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9oYW5kbGVMaWtlQnV0dG9uKCkpO1xyXG5cclxuICAgIHRoaXMuX2VsZW1lbnRcclxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiKVxyXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2hhbmRsZURlbGV0ZUJ1dHRvbigpKTtcclxuXHJcbiAgICB0aGlzLl9lbGVtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpXHJcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gdGhpcy5faGFuZGxlUHJldmlld1BpY3R1cmUoeyBuYW1lOiB0aGlzLl9uYW1lLCBsaW5rOiB0aGlzLl9saW5rIH0pKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVMaWtlQnV0dG9uKCkge1xyXG4gICAgdGhpcy5fZWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKVxyXG4gICAgICAuY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVEZWxldGVCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XHJcbiAgfVxyXG4gICAgICBcclxuICBnZW5lcmF0ZUNhcmQoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4gICAgdGhpcy5fY2FyZEltYWdlRWwgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XHJcbiAgICB0aGlzLl9jYXJkVGl0bGVFbCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcclxuICAgIFxyXG4gICAgdGhpcy5fY2FyZEltYWdlRWwuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZUVsLmFsdCA9IHRoaXMuX25hbWU7XHJcbiAgICB0aGlzLl9jYXJkVGl0bGVFbC50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XHJcbiAgfSAgICBcclxuICAgIFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDYXJkOyBcclxuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3Iob3B0aW9ucywgZm9ybUVsKSB7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gb3B0aW9ucy5pbnB1dFNlbGVjdG9yO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBvcHRpb25zLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xyXG4gICAgdGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IG9wdGlvbnMuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IG9wdGlvbnMuaW5wdXRFcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IG9wdGlvbnMuZXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Zvcm1FbCA9IGZvcm1FbDtcclxuICB9XHJcblxyXG4gIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsKSB7XHJcbiAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApOyBcclxuICAgIGlucHV0RWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBpbnB1dEVsLnZhbGlkYXRpb25NZXNzYWdlO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcblxyXG4gIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsKSB7XHJcbiAgICBjb25zdCBlcnJvck1lc3NhZ2VFbCA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dEVsLmlkfS1lcnJvcmApOyBcclxuICAgIGlucHV0RWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgZXJyb3JNZXNzYWdlRWwuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcclxuICB9XHJcbiAgXHJcbiAgX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsKSB7XHJcbiAgICBpZiAoIWlucHV0RWwudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWwpO1xyXG4gICAgfSBcclxuICB9XHJcblxyXG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICByZXR1cm4gIXRoaXMuX2lucHV0RWxzLmV2ZXJ5KChpbnB1dEVsKSA9PiBpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKTtcclxuICB9XHJcblxyXG4gIGRpc2FibGVCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKVxyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIF9lbmFibGVCdXR0b24oKSB7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gIH1cclxuICBcclxuICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuX2lucHV0RWxzKSkge1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICBcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICB0aGlzLl9zdWJtaXRCdXR0b24uZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2lucHV0RWxzID0gWy4uLnRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm1FbC5xdWVyeVNlbGVjdG9yKHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgICAgXHJcbiAgICB0aGlzLl9pbnB1dEVscy5mb3JFYWNoKChpbnB1dEVsKSA9PiB7XHJcbiAgICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsIChlKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWwpO1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fZm9ybUVsLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpOyBcclxuICB9XHJcblxyXG4gIFxyXG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcclxuICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpOyBcclxuXHJcbiAgdGhpcy5faW5wdXRFbHMuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpXHJcbiAgfSk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjsiLCJcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcih7IHBvcHVwU2VsZWN0b3IgfSkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cEVsZW1lbnQuY2xhc3NMaXN0LmFkZChcIm1vZGFsX29wZW5lZFwiKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9vcGVuZWRcIik7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfSBcclxuXHJcbiAgX2hhbmRsZUVzY0Nsb3NlID0gKGV2dCkgPT4ge1xyXG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7IFxyXG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChcclxuICAgICAgICBldnQudGFyZ2V0ID09PSB0aGlzLl9wb3B1cEVsZW1lbnQgfHwgXHJcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbF9fY2xvc2VcIilcclxuICAgICAgKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5jbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZUZvcm1TdWJtaXQpIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KVxyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1cIilcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gdGhpcy5fcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxfX2lucHV0XCIpO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0ucmVzZXQoKTtcclxuICAgIHN1cGVyLmNsb3NlKCk7IFxyXG4gIH1cclxuXHJcbiAgX2dldElucHV0VmFsdWVzKCkge1xyXG4gICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fTtcclxuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gaW5wdXRWYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9KTtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhGb3JtXHJcblxyXG4vL2luZGV4LmpzXHJcblxyXG4vLyBjb25zdCBuZXdDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNwcm9maWxlLWFkZC1jYXJkLW1vZGFsXCIsICgpID0+IHt9KTtcclxuLy8gbmV3Q2FyZFBvcHVwLm9wZW5cclxuXHJcblxyXG4vLyBuZXdDYXJkUG9wdXAuY2xvc2UoKSIsIi8vIEltcG9ydCBhbGwgdGhlIGNsYXNzZXNcclxuaW1wb3J0IFwiLi4vcGFnZXMvaW5kZXguY3NzXCI7XHJcbmltcG9ydCB7IGluaXRpYWxDYXJkcywgdmFsaWRhdGlvblNldHRpbmdzIH0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50c1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3JcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvblwiO1xyXG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybVwiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2VcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9jb21wb25lbnRzL1VzZXJJbmZvXCI7XHJcbmltcG9ydCBBcGkgZnJvbSBcIi4uL2NvbXBvbmVudHMvQXBpXCI7XHJcblxyXG5cclxuLy8gUHJvZmlsZSBFZGl0XHJcbmNvbnN0IHByb2ZpbGVFZGl0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiKTtcclxuY29uc3QgcHJvZmlsZUVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtZWRpdC1idXR0b25cIik7XHJcbmNvbnN0IHByb2ZpbGVDbG9zZUJ1dHRvbiA9IHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcbmNvbnN0IHByb2ZpbGVFZGl0Rm9ybSA9IHByb2ZpbGVFZGl0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fZm9ybV9lZGl0XCIpO1xyXG5jb25zdCBwcm9maWxlRGVzY3JpcHRpb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1kZXNjcmlwdGlvbi1pbnB1dFwiKTtcclxuY29uc3QgcHJvZmlsZVRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtdGl0bGUtaW5wdXRcIik7XHJcbmNvbnN0IHByb2ZpbGVUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fdGl0bGVcIik7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XHJcblxyXG5cclxuLy8gQWRkIENhcmRcclxuY29uc3QgcHJvZmlsZUFkZENhcmRNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZS1hZGQtY2FyZC1tb2RhbFwiKTtcclxuY29uc3QgcHJvZmlsZUFkZENhcmRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGUtYWRkLWJ1dHRvblwiKTtcclxuY29uc3QgcHJvZmlsZUFkZENhcmRDbG9zZUJ1dHRvbiA9IHByb2ZpbGVBZGRDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2VcIik7XHJcbmNvbnN0IGFkZENhcmRGb3JtID0gcHJvZmlsZUFkZENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19mb3JtX2FkZFwiKTtcclxuY29uc3QgcHJvZmlsZUFkZENhcmRUaXRsZUlucHV0ID0gcHJvZmlsZUFkZENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbnB1dF90eXBlX3RpdGxlXCIpO1xyXG5jb25zdCBwcm9maWxlQWRkQ2FyZFVybElucHV0ID0gcHJvZmlsZUFkZENhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbnB1dF90eXBlX3VybFwiKTtcclxuXHJcbi8vIFByZXZpZXcgSW1hZ2UgTW9kYWxcclxuY29uc3QgaW1hZ2VQcmV2aWV3TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2ltYWdlLXByZXZpZXctbW9kYWxcIik7XHJcbmNvbnN0IG1vZGFsSW1hZ2VFbGVtZW50ID0gaW1hZ2VQcmV2aWV3TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2UtcHJldmlld1wiKTtcclxuY29uc3QgbW9kYWxDYXB0aW9uID0gaW1hZ2VQcmV2aWV3TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2UtY2FwdGlvblwiKTtcclxuY29uc3QgaW1hZ2VQcmV2aWV3Q2xvc2VCdXR0b24gPSBpbWFnZVByZXZpZXdNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZVwiKTtcclxuXHJcblxyXG5jb25zdCBjYXJkVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhcmQtdGVtcGxhdGVcIikuY29udGVudC5maXJzdEVsZW1lbnRDaGlsZDtcclxuXHJcblxyXG5cclxuXHJcbi8vIENyZWF0ZSBpbnN0YW5jZXMgb2YgdGhlIGNsYXNzZXNcclxuY29uc3QgYXBpID0gbmV3IEFwaSh7XHJcbiAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MVwiLFxyXG4gIGhlYWRlcnM6IHtcclxuICAgIGF1dGhvcml6YXRpb246IFwiZjM0ZmM5NDAtNjQ0NC00Yzg0LTk2NDMtOTE1ZTg3Njg4OWZiXCIsXHJcbiAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG4gIH1cclxufSk7IFxyXG5cclxuY29uc3QgY2FyZFNlY3Rpb24gPSBuZXcgU2VjdGlvbih7XHJcbiAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICBjb25zdCBjYXJkRWwgPSByZW5kZXJDYXJkKGNhcmREYXRhKTtcclxuICAgIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZEVsKTtcclxuICB9LFxyXG59LCAgXHJcblwiLmNhcmRzX19saXN0XCJcclxuKTtcclxuXHJcbmNhcmRTZWN0aW9uLnJlbmRlckl0ZW1zKCk7XHJcblxyXG5jb25zdCBwcm9maWxlRWRpdEZvcm1Qb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiI3Byb2ZpbGUtZWRpdC1tb2RhbFwiLCBoYW5kbGVQcm9maWxlRWRpdFN1Ym1pdCk7XHJcbnByb2ZpbGVFZGl0Rm9ybVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBlZGl0Rm9ybUVsZW1lbnQgPSBwcm9maWxlRWRpdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1fZWRpdFwiKTtcclxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uU2V0dGluZ3MsIGVkaXRGb3JtRWxlbWVudCk7XHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmNvbnN0IHByb2ZpbGVBZGRDYXJkUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShcIiNwcm9maWxlLWFkZC1jYXJkLW1vZGFsXCIsIGhhbmRsZVByb2ZpbGVBZGRDYXJkU3VibWl0KTtcclxucHJvZmlsZUFkZENhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgYWRkRm9ybUVsZW1lbnQgPSBwcm9maWxlQWRkQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Zvcm1fYWRkXCIpO1xyXG5jb25zdCBhZGRGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvblNldHRpbmdzLCBhZGRGb3JtRWxlbWVudCk7XHJcbmFkZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgcHJvZmlsZVVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKFwiLnByb2ZpbGVfX3RpdGxlXCIsIFwiLnByb2ZpbGVfX2Rlc2NyaXB0aW9uXCIpO1xyXG5cclxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjaW1hZ2UtcHJldmlldy1tb2RhbFwiKTtcclxucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vIEluaXRpYWxpemUgYWxsIG15IGluc3RhbmNlc1xyXG5cclxuXHJcbi8vIGFsbCB0aGUgcmVzdFxyXG5mdW5jdGlvbiByZW5kZXJDYXJkKGNhcmREYXRhKSB7XHJcbiAgcmV0dXJuIG5ldyBDYXJkKGNhcmREYXRhLCBcIiNjYXJkLXRlbXBsYXRlXCIsICgpID0+IHtcclxuICAgIHBvcHVwV2l0aEltYWdlLm9wZW4oY2FyZERhdGEubmFtZSwgY2FyZERhdGEubGluaylcclxuICB9KVxyXG4gIC5nZW5lcmF0ZUNhcmQoKTtcclxufVxyXG5cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVFZGl0U3VibWl0KGlucHV0VmFsdWVzKSB7XHJcbiAgcHJvZmlsZVVzZXJJbmZvLnNldFVzZXJJbmZvKGlucHV0VmFsdWVzLnRpdGxlLCBpbnB1dFZhbHVlcy5kZXNjcmlwdGlvbik7XHJcbiAgcHJvZmlsZUVkaXRGb3JtUG9wdXAuY2xvc2UoKTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVByb2ZpbGVBZGRDYXJkU3VibWl0KGlucHV0VmFsdWVzKSB7XHJcbiAgY29uc3QgY2FyZERhdGEgPSByZW5kZXJDYXJkKHtuYW1lOiBpbnB1dFZhbHVlcy50aXRsZSwgbGluazogaW5wdXRWYWx1ZXMudXJsIH0pO1xyXG4gIGNhcmRTZWN0aW9uLmFkZEl0ZW0oY2FyZERhdGEpO1xyXG4gIHByb2ZpbGVBZGRDYXJkUG9wdXAuY2xvc2UoKTtcclxuICBcclxufTtcclxuXHJcbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgZWRpdEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XHJcbiAgY29uc3QgdXNlckluZm8gPSBwcm9maWxlVXNlckluZm8uZ2V0VXNlckluZm8oKTtcclxuICBwcm9maWxlVGl0bGVJbnB1dC52YWx1ZSA9IHVzZXJJbmZvLm5hbWU7XHJcbiAgcHJvZmlsZURlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSB1c2VySW5mby5qb2I7XHJcbiAgcHJvZmlsZUVkaXRGb3JtUG9wdXAub3BlbigpO1xyXG4gIFxyXG59KTtcclxuXHJcbnByb2ZpbGVBZGRDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgcHJvZmlsZUFkZENhcmRQb3B1cC5vcGVuKCk7XHJcbiAgYWRkRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcclxufSk7XHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yKHsgYmFzZVVybCwgaGVhZGVycyB9KSB7XHJcbiAgICB0aGlzLl9iYXNlVXJsID0gYmFzZVVybDtcclxuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIiwge1xyXG4gICAgIGhlYWRlcnM6IHtcclxuICAgICAgIGF1dGhvcml6YXRpb246IFwiZjM0ZmM5NDAtNjQ0NC00Yzg0LTk2NDMtOTE1ZTg3Njg4OWZiXCJcclxuICAgICB9XHJcbiAgIH0pXHJcbiAgICAgLnRoZW4ocmVzID0+IHtcclxuICAgICAgIGlmIChyZXMub2spIHtcclxuICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgICB9XHJcbiAgICAgICAvLyBpZiB0aGUgc2VydmVyIHJldHVybnMgYW4gZXJyb3IsIHJlamVjdCB0aGUgcHJvbWlzZVxyXG4gICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8gb3RoZXIgbWV0aG9kcyBmb3Igd29ya2luZyB3aXRoIHRoZSBBUElcclxufVxyXG5cclxuXHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVySXRlbXMoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChjYXJkRGF0YSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihjYXJkRGF0YSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xyXG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX25hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuYW1lU2VsZWN0b3IpO1xyXG4gICAgdGhpcy5fam9iRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iU2VsZWN0b3IpO1xyXG4gIH1cclxuICBcclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIGNvbnN0IHVzZXJJbmZvID0ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCxcclxuICAgICAgam9iOiB0aGlzLl9qb2JFbGVtZW50LnRleHRDb250ZW50LFxyXG4gICAgfTtcclxuICAgIHJldHVybiB1c2VySW5mbztcclxuICB9XHJcblxyXG4gIHNldFVzZXJJbmZvKG5hbWUsIGpvYikge1xyXG4gICAgdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCA9IGpvYjtcclxuICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHN1cGVyKHsgcG9wdXBTZWxlY3RvciB9KVxyXG4gICAgdGhpcy5faW1hZ2UgPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2UtcHJldmlld1wiKTtcclxuICAgIHRoaXMuX2NhcHRpb24gPSB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9faW1hZ2UtY2FwdGlvblwiKTtcclxuICB9XHJcblxyXG5cclxuICBvcGVuKG5hbWUsIGxpbmspIHtcclxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5fY2FwdGlvbi50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICBzdXBlci5vcGVuKCk7XHJcbiAgfSBcclxufVxyXG5cclxuICJdLCJuYW1lcyI6WyJ2YWxpZGF0aW9uU2V0dGluZ3MiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImNvbnN0cnVjdG9yIiwiY2FyZERhdGEiLCJjYXJkU2VsZWN0b3IiLCJoYW5kbGVQcmV2aWV3UGljdHVyZSIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZVByZXZpZXdQaWN0dXJlIiwiX2dldFRlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImZpcnN0RWxlbWVudENoaWxkIiwiY2xvbmVOb2RlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX2VsZW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiX2hhbmRsZUxpa2VCdXR0b24iLCJfaGFuZGxlRGVsZXRlQnV0dG9uIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwicmVtb3ZlIiwiZ2VuZXJhdGVDYXJkIiwiX2NhcmRJbWFnZUVsIiwiX2NhcmRUaXRsZUVsIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJvcHRpb25zIiwiZm9ybUVsIiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJfaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsIl9mb3JtRWwiLCJfc2hvd0lucHV0RXJyb3IiLCJpbnB1dEVsIiwiZXJyb3JNZXNzYWdlRWwiLCJpZCIsImFkZCIsInZhbGlkYXRpb25NZXNzYWdlIiwiX2hpZGVJbnB1dEVycm9yIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGFzSW52YWxpZElucHV0IiwiX2lucHV0RWxzIiwiZXZlcnkiLCJkaXNhYmxlQnV0dG9uIiwiX3N1Ym1pdEJ1dHRvbiIsImRpc2FibGVkIiwiX2VuYWJsZUJ1dHRvbiIsIl90b2dnbGVCdXR0b25TdGF0ZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwiZSIsImVuYWJsZVZhbGlkYXRpb24iLCJwcmV2ZW50RGVmYXVsdCIsInJlc2V0VmFsaWRhdGlvbiIsImlucHV0RWxlbWVudCIsIlBvcHVwIiwiX3JlZiIsInBvcHVwU2VsZWN0b3IiLCJfcG9wdXBFbGVtZW50Iiwib3BlbiIsIl9oYW5kbGVFc2NDbG9zZSIsImNsb3NlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2dCIsImtleSIsInNldEV2ZW50TGlzdGVuZXJzIiwidGFyZ2V0IiwiY29udGFpbnMiLCJoYW5kbGVGb3JtU3VibWl0Iiwic3VwZXIiLCJfcG9wdXBGb3JtIiwiX2hhbmRsZUZvcm1TdWJtaXQiLCJfaW5wdXRMaXN0IiwicmVzZXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbnB1dFZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJwcm9maWxlRWRpdE1vZGFsIiwicHJvZmlsZUVkaXRCdXR0b24iLCJwcm9maWxlRGVzY3JpcHRpb25JbnB1dCIsInByb2ZpbGVUaXRsZUlucHV0IiwicHJvZmlsZUFkZENhcmRNb2RhbCIsInByb2ZpbGVBZGRDYXJkQnV0dG9uIiwiaW1hZ2VQcmV2aWV3TW9kYWwiLCJjYXJkU2VjdGlvbiIsImJhc2VVcmwiLCJoZWFkZXJzIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsImdldEluaXRpYWxDYXJkcyIsImZldGNoIiwiYXV0aG9yaXphdGlvbiIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsInJlbmRlckl0ZW1zIiwiYWRkSXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiY2FyZEVsIiwicmVuZGVyQ2FyZCIsInByb2ZpbGVFZGl0Rm9ybVBvcHVwIiwiUG9wdXBXaXRoRm9ybSIsInByb2ZpbGVVc2VySW5mbyIsInNldFVzZXJJbmZvIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImVkaXRGb3JtVmFsaWRhdG9yIiwiRm9ybVZhbGlkYXRvciIsInByb2ZpbGVBZGRDYXJkUG9wdXAiLCJ1cmwiLCJhZGRGb3JtVmFsaWRhdG9yIiwibmFtZVNlbGVjdG9yIiwiam9iU2VsZWN0b3IiLCJfbmFtZUVsZW1lbnQiLCJfam9iRWxlbWVudCIsImdldFVzZXJJbmZvIiwiam9iIiwicG9wdXBXaXRoSW1hZ2UiLCJfaW1hZ2UiLCJfY2FwdGlvbiIsIkNhcmQiLCJ1c2VySW5mbyJdLCJzb3VyY2VSb290IjoiIn0=